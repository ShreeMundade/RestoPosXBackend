datasource postgres {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  reviews   Review[]
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Order {
  createdAt  DateTime  @default(now())
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  discount   Float?
  id         String    @id @default(cuid())
  product    Product?  @relation(fields: [productId], references: [id])
  productId  String?
  quantity   Int?
  totalPrice Int?
  updatedAt  DateTime  @updatedAt
}

model Customer {
  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?
  createdAt DateTime @default(now())
  email     String?
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  orders    Order[]
  phone     String?
  updatedAt DateTime @updatedAt
}

model Address {
  address_1   String?
  address_2   String?
  city        String?
  createdAt   DateTime     @default(now())
  customers   Customer[]
  id          String       @id @default(cuid())
  restaurants Restaurant[]
  state       String?
  updatedAt   DateTime     @updatedAt
  zip         Int?
}

model Product {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  itemPrice   Float?
  name        String?
  orders      Order[]
  updatedAt   DateTime @updatedAt
}

model Restaurant {
  address   Address?  @relation(fields: [addressId], references: [id])
  addressId String?
  createdAt DateTime  @default(now())
  cuisine   Cuisine[]
  id        String    @id @default(cuid())
  name      String
  reviews   Review[]
  updatedAt DateTime  @updatedAt
}

model Cuisine {
  createdAt   DateTime     @default(now())
  id          String       @id @default(cuid())
  name        String
  restaurants Restaurant[]
  updatedAt   DateTime     @updatedAt
}

model Review {
  content      String?
  createdAt    DateTime    @default(now())
  id           String      @id @default(cuid())
  like         Boolean
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
  restaurantId String?
  updatedAt    DateTime    @updatedAt
  user         User?       @relation(fields: [userId], references: [id])
  userId       String?
}